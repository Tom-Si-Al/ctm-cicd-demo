{"version":3,"sources":["validators.js","happy.jpg","sad.jpg","App.js","reportWebVitals.js","index.js"],"names":["isEmailValid","email","includes","isPasswordValid","password","length","App","state","submitted","isFormValid","handleEmailValidation","event","setState","target","value","handlePasswordValidation","handleSubmit","preventDefault","isDefined","Container","Row","className","Col","Form","onSubmit","this","Group","controlId","Label","Control","type","placeholder","onChange","isValid","isInvalid","Text","Button","variant","xs","Image","src","happy","alt","rounded","fluid","sad","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAAaA,EAAe,SAACC,GAC3B,QAAIA,EAAMC,SAAS,MAMRC,EAAkB,SAACC,GAC9B,OAAIA,EAASC,OAAS,GCRT,MAA0B,kCCA1B,MAA0B,gC,OCQnCC,E,4MACJC,MAAQ,CACNC,WAAW,EACXP,MAAO,GACPG,SAAU,GACVK,aAAa,G,EAGfC,sBAAwB,SAACC,GACvB,EAAKC,SAAS,CACZX,MAAOU,EAAME,OAAOC,MACpBd,aAAcA,EAAaW,EAAME,OAAOC,U,EAI5CC,yBAA2B,SAACJ,GAC1B,EAAKC,SAAS,CACZR,SAAUO,EAAME,OAAOC,MACvBX,gBAAiBA,EAAgBQ,EAAME,OAAOC,U,EAIlDE,aAAe,SAACL,GACdA,EAAMM,iBACN,EAAKL,SAAS,CAAEJ,WAAW,IACvB,EAAKD,MAAMP,cAAgB,EAAKO,MAAMJ,gBACxC,EAAKS,SAAS,CACZH,aAAa,IAGf,EAAKG,SAAS,CACZH,aAAa,K,EAKnBS,UAAY,SAACJ,GAAD,MAA4B,qBAAVA,G,4CAE9B,WACE,OACE,eAACK,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,UAAU,OAAf,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMC,SAAUC,KAAKT,aAArB,UACE,eAACO,EAAA,EAAKG,MAAN,CAAYL,UAAU,OAAOM,UAAU,iBAAvC,UACE,cAACJ,EAAA,EAAKK,MAAN,4BACA,cAACL,EAAA,EAAKM,QAAN,CACE,cAAY,YACZC,KAAK,OACLC,YAAY,cACZC,SAAUP,KAAKf,sBACfuB,QACER,KAAKP,UAAUO,KAAKlB,MAAMP,eAC1ByB,KAAKlB,MAAMP,aAEbkC,UACET,KAAKP,UAAUO,KAAKlB,MAAMP,gBACzByB,KAAKlB,MAAMP,eAGhB,cAACuB,EAAA,EAAKY,KAAN,CAAWd,UAAU,aAArB,+DAKF,eAACE,EAAA,EAAKG,MAAN,CAAYL,UAAU,OAAOM,UAAU,oBAAvC,UACE,cAACJ,EAAA,EAAKK,MAAN,uBACA,cAACL,EAAA,EAAKM,QAAN,CACE,cAAY,eACZC,KAAK,WACLC,YAAY,WACZC,SAAUP,KAAKV,yBACfkB,QACER,KAAKP,UAAUO,KAAKlB,MAAMJ,kBAC1BsB,KAAKlB,MAAMJ,gBAEb+B,UACET,KAAKP,UAAUO,KAAKlB,MAAMJ,mBACzBsB,KAAKlB,MAAMJ,qBAIlB,cAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAA/B,2BAMN,cAACV,EAAA,EAAD,CAAKC,UAAU,OAAf,SACE,eAACC,EAAA,EAAD,CAAKD,UAAU,UAAUiB,GAAI,EAA7B,UACGb,KAAKlB,MAAMC,WAAaiB,KAAKlB,MAAME,aAClC,cAAC8B,EAAA,EAAD,CAAOC,IAAKC,EAAOC,IAAI,gBAAgBC,SAAO,EAACC,OAAK,IAErDnB,KAAKlB,MAAMC,YAAciB,KAAKlB,MAAME,aACnC,cAAC8B,EAAA,EAAD,CAAOC,IAAKK,EAAKH,IAAI,cAAcC,SAAO,EAACC,OAAK,gB,GA9F5CE,IAAMC,WAuGTzC,ICnGA0C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.886bdadf.chunk.js","sourcesContent":["export const isEmailValid = (email) => {\n  if (email.includes('@')) {\n    return true\n  }\n  return false\n}\n\nexport const isPasswordValid = (password) => {\n  if (password.length > 5) {\n    return true\n  }\n  return false\n}\n","export default __webpack_public_path__ + \"static/media/happy.016724b0.jpg\";","export default __webpack_public_path__ + \"static/media/sad.12b743f0.jpg\";","import { Container, Row, Col, Form, Button, Image } from 'react-bootstrap'\nimport React from 'react'\n\nimport { isEmailValid, isPasswordValid } from './validators'\n\nimport happy from './happy.jpg'\nimport sad from './sad.jpg'\n\nclass App extends React.Component {\n  state = {\n    submitted: false,\n    email: '',\n    password: '',\n    isFormValid: false,\n  }\n\n  handleEmailValidation = (event) => {\n    this.setState({\n      email: event.target.value,\n      isEmailValid: isEmailValid(event.target.value),\n    })\n  }\n\n  handlePasswordValidation = (event) => {\n    this.setState({\n      password: event.target.value,\n      isPasswordValid: isPasswordValid(event.target.value),\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.setState({ submitted: true })\n    if (this.state.isEmailValid && this.state.isPasswordValid) {\n      this.setState({\n        isFormValid: true,\n      })\n    } else {\n      this.setState({\n        isFormValid: false,\n      })\n    }\n  }\n\n  isDefined = (value) => typeof value !== 'undefined'\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"pt-4\">\n          <Col>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  data-testid=\"formEmail\"\n                  type=\"text\"\n                  placeholder=\"Enter email\"\n                  onChange={this.handleEmailValidation}\n                  isValid={\n                    this.isDefined(this.state.isEmailValid) &&\n                    this.state.isEmailValid\n                  }\n                  isInvalid={\n                    this.isDefined(this.state.isEmailValid) &&\n                    !this.state.isEmailValid\n                  }\n                />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  data-testid=\"formPassword\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.handlePasswordValidation}\n                  isValid={\n                    this.isDefined(this.state.isPasswordValid) &&\n                    this.state.isPasswordValid\n                  }\n                  isInvalid={\n                    this.isDefined(this.state.isPasswordValid) &&\n                    !this.state.isPasswordValid\n                  }\n                />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n        <Row className=\"pt-4\">\n          <Col className=\"mx-auto\" xs={6}>\n            {this.state.submitted && this.state.isFormValid && (\n              <Image src={happy} alt=\"Happy Meerkat\" rounded fluid />\n            )}\n            {this.state.submitted && !this.state.isFormValid && (\n              <Image src={sad} alt=\"Sad Meerkat\" rounded fluid />\n            )}\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}